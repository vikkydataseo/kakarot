context,contract_name,function_name,n_steps,n_memory_holes,range_check_builtin,bitwise_builtin,pedersen_builtin,args,kwargs
ERC20,kakarot,deploy,776395,71140,25434.0,34.0,3546.0,(),"{'bytecode': [96, 160, 96, 64, 82, 52, 128, 21, 98, 0, 0, 17, 87, 96, 0, 128, 253, 91, 80, 96, 64, 81, 98, 0, 19, 251, 56, 3, 128, 98, 0, 19, 251, 131, 57, 129, 129, 1, 96, 64, 82, 129, 1, 144, 98, 0, 0, 55, 145, 144, 98, 0, 2, 67, 86, 91, 130, 96, 0, 144, 129, 98, 0, 0, 72, 145, 144, 98, 0, 5, 40, 86, 91, 80, 129, 96, 1, 144, 129, 98, 0, 0, 90, 145, 144, 98, 0, 5, 40, 86, 91, 80, 128, 96, 255, 22, 96, 128, 129, 96, 255, 22, 129, 82, 80, 80, 80, 80, 80, 98, 0, 6, 15, 86, 91, 96, 0, 96, 64, 81, 144, 80, 144, 86, 91, 96, 0, 128, 253, 91, 96, 0, 128, 253, 91, 96, 0, 128, 253, 91, 96, 0, 128, 253, 91, 96, 0, 96, 31, 25, 96, 31, 131, 1, 22, 144, 80, 145, 144, 80, 86, 91, 127, 78, 72, 123, 113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 0, 82, 96, 65, 96, 4, 82, 96, 36, 96, 0, 253, 91, 98, 0, 0, 219, 130, 98, 0, 0, 144, 86, 91, 129, 1, 129, 129, 16, 103, 255, 255, 255, 255, 255, 255, 255, 255, 130, 17, 23, 21, 98, 0, 0, 253, 87, 98, 0, 0, 252, 98, 0, 0, 161, 86, 91, 91, 128, 96, 64, 82, 80, 80, 80, 86, 91, 96, 0, 98, 0, 1, 18, 98, 0, 0, 114, 86, 91, 144, 80, 98, 0, 1, 32, 130, 130, 98, 0, 0, 208, 86, 91, 145, 144, 80, 86, 91, 96, 0, 103, 255, 255, 255, 255, 255, 255, 255, 255, 130, 17, 21, 98, 0, 1, 67, 87, 98, 0, 1, 66, 98, 0, 0, 161, 86, 91, 91, 98, 0, 1, 78, 130, 98, 0, 0, 144, 86, 91, 144, 80, 96, 32, 129, 1, 144, 80, 145, 144, 80, 86, 91, 96, 0, 91, 131, 129, 16, 21, 98, 0, 1, 123, 87, 128, 130, 1, 81, 129, 132, 1, 82, 96, 32, 129, 1, 144, 80, 98, 0, 1, 94, 86, 91, 96, 0, 132, 132, 1, 82, 80, 80, 80, 80, 86, 91, 96, 0, 98, 0, 1, 158, 98, 0, 1, 152, 132, 98, 0, 1, 37, 86, 91, 98, 0, 1, 6, 86, 91, 144, 80, 130, 129, 82, 96, 32, 129, 1, 132, 132, 132, 1, 17, 21, 98, 0, 1, 189, 87, 98, 0, 1, 188, 98, 0, 0, 139, 86, 91, 91, 98, 0, 1, 202, 132, 130, 133, 98, 0, 1, 91, 86, 91, 80, 147, 146, 80, 80, 80, 86, 91, 96, 0, 130, 96, 31, 131, 1, 18, 98, 0, 1, 234, 87, 98, 0, 1, 233, 98, 0, 0, 134, 86, 91, 91, 129, 81, 98, 0, 1, 252, 132, 130, 96, 32, 134, 1, 98, 0, 1, 135, 86, 91, 145, 80, 80, 146, 145, 80, 80, 86, 91, 96, 0, 96, 255, 130, 22, 144, 80, 145, 144, 80, 86, 91, 98, 0, 2, 29, 129, 98, 0, 2, 5, 86, 91, 129, 20, 98, 0, 2, 41, 87, 96, 0, 128, 253, 91, 80, 86, 91, 96, 0, 129, 81, 144, 80, 98, 0, 2, 61, 129, 98, 0, 2, 18, 86, 91, 146, 145, 80, 80, 86, 91, 96, 0, 128, 96, 0, 96, 96, 132, 134, 3, 18, 21, 98, 0, 2, 95, 87, 98, 0, 2, 94, 98, 0, 0, 124, 86, 91, 91, 96, 0, 132, 1, 81, 103, 255, 255, 255, 255, 255, 255, 255, 255, 129, 17, 21, 98, 0, 2, 128, 87, 98, 0, 2, 127, 98, 0, 0, 129, 86, 91, 91, 98, 0, 2, 142, 134, 130, 135, 1, 98, 0, 1, 210, 86, 91, 147, 80, 80, 96, 32, 132, 1, 81, 103, 255, 255, 255, 255, 255, 255, 255, 255, 129, 17, 21, 98, 0, 2, 178, 87, 98, 0, 2, 177, 98, 0, 0, 129, 86, 91, 91, 98, 0, 2, 192, 134, 130, 135, 1, 98, 0, 1, 210, 86, 91, 146, 80, 80, 96, 64, 98, 0, 2, 211, 134, 130, 135, 1, 98, 0, 2, 44, 86, 91, 145, 80, 80, 146, 80, 146, 80, 146, 86, 91, 96, 0, 129, 81, 144, 80, 145, 144, 80, 86, 91, 127, 78, 72, 123, 113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 0, 82, 96, 34, 96, 4, 82, 96, 36, 96, 0, 253, 91, 96, 0, 96, 2, 130, 4, 144, 80, 96, 1, 130, 22, 128, 98, 0, 3, 48, 87, 96, 127, 130, 22, 145, 80, 91, 96, 32, 130, 16, 129, 3, 98, 0, 3, 70, 87, 98, 0, 3, 69, 98, 0, 2, 232, 86, 91, 91, 80, 145, 144, 80, 86, 91, 96, 0, 129, 144, 80, 129, 96, 0, 82, 96, 32, 96, 0, 32, 144, 80, 145, 144, 80, 86, 91, 96, 0, 96, 32, 96, 31, 131, 1, 4, 144, 80, 145, 144, 80, 86, 91, 96, 0, 130, 130, 27, 144, 80, 146, 145, 80, 80, 86, 91, 96, 0, 96, 8, 131, 2, 98, 0, 3, 176, 127, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 130, 98, 0, 3, 113, 86, 91, 98, 0, 3, 188, 134, 131, 98, 0, 3, 113, 86, 91, 149, 80, 128, 25, 132, 22, 147, 80, 128, 134, 22, 132, 23, 146, 80, 80, 80, 147, 146, 80, 80, 80, 86, 91, 96, 0, 129, 144, 80, 145, 144, 80, 86, 91, 96, 0, 129, 144, 80, 145, 144, 80, 86, 91, 96, 0, 98, 0, 4, 9, 98, 0, 4, 3, 98, 0, 3, 253, 132, 98, 0, 3, 212, 86, 91, 98, 0, 3, 222, 86, 91, 98, 0, 3, 212, 86, 91, 144, 80, 145, 144, 80, 86, 91, 96, 0, 129, 144, 80, 145, 144, 80, 86, 91, 98, 0, 4, 37, 131, 98, 0, 3, 232, 86, 91, 98, 0, 4, 61, 98, 0, 4, 52, 130, 98, 0, 4, 16, 86, 91, 132, 132, 84, 98, 0, 3, 126, 86, 91, 130, 85, 80, 80, 80, 80, 86, 91, 96, 0, 144, 86, 91, 98, 0, 4, 84, 98, 0, 4, 69, 86, 91, 98, 0, 4, 97, 129, 132, 132, 98, 0, 4, 26, 86, 91, 80, 80, 80, 86, 91, 91, 129, 129, 16, 21, 98, 0, 4, 137, 87, 98, 0, 4, 125, 96, 0, 130, 98, 0, 4, 74, 86, 91, 96, 1, 129, 1, 144, 80, 98, 0, 4, 103, 86, 91, 80, 80, 86, 91, 96, 31, 130, 17, 21, 98, 0, 4, 216, 87, 98, 0, 4, 162, 129, 98, 0, 3, 76, 86, 91, 98, 0, 4, 173, 132, 98, 0, 3, 97, 86, 91, 129, 1, 96, 32, 133, 16, 21, 98, 0, 4, 189, 87, 129, 144, 80, 91, 98, 0, 4, 213, 98, 0, 4, 204, 133, 98, 0, 3, 97, 86, 91, 131, 1, 130, 98, 0, 4, 102, 86, 91, 80, 80, 91, 80, 80, 80, 86, 91, 96, 0, 130, 130, 28, 144, 80, 146, 145, 80, 80, 86, 91, 96, 0, 98, 0, 4, 253, 96, 0, 25, 132, 96, 8, 2, 98, 0, 4, 221, 86, 91, 25, 128, 131, 22, 145, 80, 80, 146, 145, 80, 80, 86, 91, 96, 0, 98, 0, 5, 24, 131, 131, 98, 0, 4, 234, 86, 91, 145, 80, 130, 96, 2, 2, 130, 23, 144, 80, 146, 145, 80, 80, 86, 91, 98, 0, 5, 51, 130, 98, 0, 2, 221, 86, 91, 103, 255, 255, 255, 255, 255, 255, 255, 255, 129, 17, 21, 98, 0, 5, 79, 87, 98, 0, 5, 78, 98, 0, 0, 161, 86, 91, 91, 98, 0, 5, 91, 130, 84, 98, 0, 3, 23, 86, 91, 98, 0, 5, 104, 130, 130, 133, 98, 0, 4, 141, 86, 91, 96, 0, 96, 32, 144, 80, 96, 31, 131, 17, 96, 1, 129, 20, 98, 0, 5, 160, 87, 96, 0, 132, 21, 98, 0, 5, 139, 87, 130, 135, 1, 81, 144, 80, 91, 98, 0, 5, 151, 133, 130, 98, 0, 5, 10, 86, 91, 134, 85, 80, 98, 0, 6, 7, 86, 91, 96, 31, 25, 132, 22, 98, 0, 5, 176, 134, 98, 0, 3, 76, 86, 91, 96, 0, 91, 130, 129, 16, 21, 98, 0, 5, 218, 87, 132, 137, 1, 81, 130, 85, 96, 1, 130, 1, 145, 80, 96, 32, 133, 1, 148, 80, 96, 32, 129, 1, 144, 80, 98, 0, 5, 179, 86, 91, 134, 131, 16, 21, 98, 0, 5, 250, 87, 132, 137, 1, 81, 98, 0, 5, 246, 96, 31, 137, 22, 130, 98, 0, 4, 234, 86, 91, 131, 85, 80, 91, 96, 1, 96, 2, 136, 2, 1, 136, 85, 80, 80, 80, 91, 80, 80, 80, 80, 80, 80, 86, 91, 96, 128, 81, 97, 13, 208, 98, 0, 6, 43, 96, 0, 57, 96, 0, 97, 6, 32, 1, 82, 97, 13, 208, 96, 0, 243, 254, 96, 128, 96, 64, 82, 52, 128, 21, 97, 0, 16, 87, 96, 0, 128, 253, 91, 80, 96, 4, 54, 16, 97, 0, 169, 87, 96, 0, 53, 96, 224, 28, 128, 99, 64, 193, 15, 25, 17, 97, 0, 113, 87, 128, 99, 64, 193, 15, 25, 20, 97, 1, 104, 87, 128, 99, 112, 160, 130, 49, 20, 97, 1, 132, 87, 128, 99, 149, 216, 155, 65, 20, 97, 1, 180, 87, 128, 99, 157, 194, 159, 172, 20, 97, 1, 210, 87, 128, 99, 169, 5, 156, 187, 20, 97, 1, 238, 87, 128, 99, 221, 98, 237, 62, 20, 97, 2, 30, 87, 97, 0, 169, 86, 91, 128, 99, 6, 253, 222, 3, 20, 97, 0, 174, 87, 128, 99, 9, 94, 167, 179, 20, 97, 0, 204, 87, 128, 99, 24, 22, 13, 221, 20, 97, 0, 252, 87, 128, 99, 35, 184, 114, 221, 20, 97, 1, 26, 87, 128, 99, 49, 60, 229, 103, 20, 97, 1, 74, 87, 91, 96, 0, 128, 253, 91, 97, 0, 182, 97, 2, 78, 86, 91, 96, 64, 81, 97, 0, 195, 145, 144, 97, 10, 81, 86, 91, 96, 64, 81, 128, 145, 3, 144, 243, 91, 97, 0, 230, 96, 4, 128, 54, 3, 129, 1, 144, 97, 0, 225, 145, 144, 97, 11, 12, 86, 91, 97, 2, 220, 86, 91, 96, 64, 81, 97, 0, 243, 145, 144, 97, 11, 103, 86, 91, 96, 64, 81, 128, 145, 3, 144, 243, 91, 97, 1, 4, 97, 3, 206, 86, 91, 96, 64, 81, 97, 1, 17, 145, 144, 97, 11, 145, 86, 91, 96, 64, 81, 128, 145, 3, 144, 243, 91, 97, 1, 52, 96, 4, 128, 54, 3, 129, 1, 144, 97, 1, 47, 145, 144, 97, 11, 172, 86, 91, 97, 3, 212, 86, 91, 96, 64, 81, 97, 1, 65, 145, 144, 97, 11, 103, 86, 91, 96, 64, 81, 128, 145, 3, 144, 243, 91, 97, 1, 82, 97, 6, 30, 86, 91, 96, 64, 81, 97, 1, 95, 145, 144, 97, 12, 27, 86, 91, 96, 64, 81, 128, 145, 3, 144, 243, 91, 97, 1, 130, 96, 4, 128, 54, 3, 129, 1, 144, 97, 1, 125, 145, 144, 97, 11, 12, 86, 91, 97, 6, 66, 86, 91, 0, 91, 97, 1, 158, 96, 4, 128, 54, 3, 129, 1, 144, 97, 1, 153, 145, 144, 97, 12, 54, 86, 91, 97, 7, 18, 86, 91, 96, 64, 81, 97, 1, 171, 145, 144, 97, 11, 145, 86, 91, 96, 64, 81, 128, 145, 3, 144, 243, 91, 97, 1, 188, 97, 7, 42, 86, 91, 96, 64, 81, 97, 1, 201, 145, 144, 97, 10, 81, 86, 91, 96, 64, 81, 128, 145, 3, 144, 243, 91, 97, 1, 236, 96, 4, 128, 54, 3, 129, 1, 144, 97, 1, 231, 145, 144, 97, 11, 12, 86, 91, 97, 7, 184, 86, 91, 0, 91, 97, 2, 8, 96, 4, 128, 54, 3, 129, 1, 144, 97, 2, 3, 145, 144, 97, 11, 12, 86, 91, 97, 8, 136, 86, 91, 96, 64, 81, 97, 2, 21, 145, 144, 97, 11, 103, 86, 91, 96, 64, 81, 128, 145, 3, 144, 243, 91, 97, 2, 56, 96, 4, 128, 54, 3, 129, 1, 144, 97, 2, 51, 145, 144, 97, 12, 99, 86, 91, 97, 9, 156, 86, 91, 96, 64, 81, 97, 2, 69, 145, 144, 97, 11, 145, 86, 91, 96, 64, 81, 128, 145, 3, 144, 243, 91, 96, 0, 128, 84, 97, 2, 91, 144, 97, 12, 210, 86, 91, 128, 96, 31, 1, 96, 32, 128, 145, 4, 2, 96, 32, 1, 96, 64, 81, 144, 129, 1, 96, 64, 82, 128, 146, 145, 144, 129, 129, 82, 96, 32, 1, 130, 128, 84, 97, 2, 135, 144, 97, 12, 210, 86, 91, 128, 21, 97, 2, 212, 87, 128, 96, 31, 16, 97, 2, 169, 87, 97, 1, 0, 128, 131, 84, 4, 2, 131, 82, 145, 96, 32, 1, 145, 97, 2, 212, 86, 91, 130, 1, 145, 144, 96, 0, 82, 96, 32, 96, 0, 32, 144, 91, 129, 84, 129, 82, 144, 96, 1, 1, 144, 96, 32, 1, 128, 131, 17, 97, 2, 183, 87, 130, 144, 3, 96, 31, 22, 130, 1, 145, 91, 80, 80, 80, 80, 80, 129, 86, 91, 96, 0, 129, 96, 4, 96, 0, 51, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 96, 0, 133, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 129, 144, 85, 80, 130, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 51, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 127, 140, 91, 225, 229, 235, 236, 125, 91, 209, 79, 113, 66, 125, 30, 132, 243, 221, 3, 20, 192, 247, 178, 41, 30, 91, 32, 10, 200, 199, 195, 185, 37, 132, 96, 64, 81, 97, 3, 188, 145, 144, 97, 11, 145, 86, 91, 96, 64, 81, 128, 145, 3, 144, 163, 96, 1, 144, 80, 146, 145, 80, 80, 86, 91, 96, 2, 84, 129, 86, 91, 96, 0, 128, 96, 4, 96, 0, 134, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 96, 0, 51, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 84, 144, 80, 127, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 129, 20, 97, 5, 10, 87, 130, 129, 97, 4, 137, 145, 144, 97, 13, 50, 86, 91, 96, 4, 96, 0, 135, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 96, 0, 51, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 129, 144, 85, 80, 91, 130, 96, 3, 96, 0, 135, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 96, 0, 130, 130, 84, 97, 5, 89, 145, 144, 97, 13, 50, 86, 91, 146, 80, 80, 129, 144, 85, 80, 130, 96, 3, 96, 0, 134, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 96, 0, 130, 130, 84, 1, 146, 80, 80, 129, 144, 85, 80, 131, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 133, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 127, 221, 242, 82, 173, 27, 226, 200, 155, 105, 194, 176, 104, 252, 55, 141, 170, 149, 43, 167, 241, 99, 196, 161, 22, 40, 245, 90, 77, 245, 35, 179, 239, 133, 96, 64, 81, 97, 6, 10, 145, 144, 97, 11, 145, 86, 91, 96, 64, 81, 128, 145, 3, 144, 163, 96, 1, 145, 80, 80, 147, 146, 80, 80, 80, 86, 91, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 129, 86, 91, 128, 96, 2, 96, 0, 130, 130, 84, 97, 6, 84, 145, 144, 97, 13, 102, 86, 91, 146, 80, 80, 129, 144, 85, 80, 128, 96, 3, 96, 0, 132, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 96, 0, 130, 130, 84, 1, 146, 80, 80, 129, 144, 85, 80, 129, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 96, 0, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 127, 221, 242, 82, 173, 27, 226, 200, 155, 105, 194, 176, 104, 252, 55, 141, 170, 149, 43, 167, 241, 99, 196, 161, 22, 40, 245, 90, 77, 245, 35, 179, 239, 131, 96, 64, 81, 97, 7, 6, 145, 144, 97, 11, 145, 86, 91, 96, 64, 81, 128, 145, 3, 144, 163, 80, 80, 86, 91, 96, 3, 96, 32, 82, 128, 96, 0, 82, 96, 64, 96, 0, 32, 96, 0, 145, 80, 144, 80, 84, 129, 86, 91, 96, 1, 128, 84, 97, 7, 55, 144, 97, 12, 210, 86, 91, 128, 96, 31, 1, 96, 32, 128, 145, 4, 2, 96, 32, 1, 96, 64, 81, 144, 129, 1, 96, 64, 82, 128, 146, 145, 144, 129, 129, 82, 96, 32, 1, 130, 128, 84, 97, 7, 99, 144, 97, 12, 210, 86, 91, 128, 21, 97, 7, 176, 87, 128, 96, 31, 16, 97, 7, 133, 87, 97, 1, 0, 128, 131, 84, 4, 2, 131, 82, 145, 96, 32, 1, 145, 97, 7, 176, 86, 91, 130, 1, 145, 144, 96, 0, 82, 96, 32, 96, 0, 32, 144, 91, 129, 84, 129, 82, 144, 96, 1, 1, 144, 96, 32, 1, 128, 131, 17, 97, 7, 147, 87, 130, 144, 3, 96, 31, 22, 130, 1, 145, 91, 80, 80, 80, 80, 80, 129, 86, 91, 128, 96, 3, 96, 0, 132, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 96, 0, 130, 130, 84, 97, 8, 7, 145, 144, 97, 13, 50, 86, 91, 146, 80, 80, 129, 144, 85, 80, 128, 96, 2, 96, 0, 130, 130, 84, 3, 146, 80, 80, 129, 144, 85, 80, 96, 0, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 130, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 127, 221, 242, 82, 173, 27, 226, 200, 155, 105, 194, 176, 104, 252, 55, 141, 170, 149, 43, 167, 241, 99, 196, 161, 22, 40, 245, 90, 77, 245, 35, 179, 239, 131, 96, 64, 81, 97, 8, 124, 145, 144, 97, 11, 145, 86, 91, 96, 64, 81, 128, 145, 3, 144, 163, 80, 80, 86, 91, 96, 0, 129, 96, 3, 96, 0, 51, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 96, 0, 130, 130, 84, 97, 8, 217, 145, 144, 97, 13, 50, 86, 91, 146, 80, 80, 129, 144, 85, 80, 129, 96, 3, 96, 0, 133, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 129, 82, 96, 32, 1, 144, 129, 82, 96, 32, 1, 96, 0, 32, 96, 0, 130, 130, 84, 1, 146, 80, 80, 129, 144, 85, 80, 130, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 51, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 22, 127, 221, 242, 82, 173, 27, 226, 200, 155, 105, 194, 176, 104, 252, 55, 141, 170, 149, 43, 167, 241, 99, 196, 161, 22, 40, 245, 90, 77, 245, 35, 179, 239, 132, 96, 64, 81, 97, 9, 138, 145, 144, 97, 11, 145, 86, 91, 96, 64, 81, 128, 145, 3, 144, 163, 96, 1, 144, 80, 146, 145, 80, 80, 86, 91, 96, 4, 96, 32, 82, 129, 96, 0, 82, 96, 64, 96, 0, 32, 96, 32, 82, 128, 96, 0, 82, 96, 64, 96, 0, 32, 96, 0, 145, 80, 145, 80, 80, 84, 129, 86, 91, 96, 0, 129, 81, 144, 80, 145, 144, 80, 86, 91, 96, 0, 130, 130, 82, 96, 32, 130, 1, 144, 80, 146, 145, 80, 80, 86, 91, 96, 0, 91, 131, 129, 16, 21, 97, 9, 251, 87, 128, 130, 1, 81, 129, 132, 1, 82, 96, 32, 129, 1, 144, 80, 97, 9, 224, 86, 91, 96, 0, 132, 132, 1, 82, 80, 80, 80, 80, 86, 91, 96, 0, 96, 31, 25, 96, 31, 131, 1, 22, 144, 80, 145, 144, 80, 86, 91, 96, 0, 97, 10, 35, 130, 97, 9, 193, 86, 91, 97, 10, 45, 129, 133, 97, 9, 204, 86, 91, 147, 80, 97, 10, 61, 129, 133, 96, 32, 134, 1, 97, 9, 221, 86, 91, 97, 10, 70, 129, 97, 10, 7, 86, 91, 132, 1, 145, 80, 80, 146, 145, 80, 80, 86, 91, 96, 0, 96, 32, 130, 1, 144, 80, 129, 129, 3, 96, 0, 131, 1, 82, 97, 10, 107, 129, 132, 97, 10, 24, 86, 91, 144, 80, 146, 145, 80, 80, 86, 91, 96, 0, 128, 253, 91, 96, 0, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 130, 22, 144, 80, 145, 144, 80, 86, 91, 96, 0, 97, 10, 163, 130, 97, 10, 120, 86, 91, 144, 80, 145, 144, 80, 86, 91, 97, 10, 179, 129, 97, 10, 152, 86, 91, 129, 20, 97, 10, 190, 87, 96, 0, 128, 253, 91, 80, 86, 91, 96, 0, 129, 53, 144, 80, 97, 10, 208, 129, 97, 10, 170, 86, 91, 146, 145, 80, 80, 86, 91, 96, 0, 129, 144, 80, 145, 144, 80, 86, 91, 97, 10, 233, 129, 97, 10, 214, 86, 91, 129, 20, 97, 10, 244, 87, 96, 0, 128, 253, 91, 80, 86, 91, 96, 0, 129, 53, 144, 80, 97, 11, 6, 129, 97, 10, 224, 86, 91, 146, 145, 80, 80, 86, 91, 96, 0, 128, 96, 64, 131, 133, 3, 18, 21, 97, 11, 35, 87, 97, 11, 34, 97, 10, 115, 86, 91, 91, 96, 0, 97, 11, 49, 133, 130, 134, 1, 97, 10, 193, 86, 91, 146, 80, 80, 96, 32, 97, 11, 66, 133, 130, 134, 1, 97, 10, 247, 86, 91, 145, 80, 80, 146, 80, 146, 144, 80, 86, 91, 96, 0, 129, 21, 21, 144, 80, 145, 144, 80, 86, 91, 97, 11, 97, 129, 97, 11, 76, 86, 91, 130, 82, 80, 80, 86, 91, 96, 0, 96, 32, 130, 1, 144, 80, 97, 11, 124, 96, 0, 131, 1, 132, 97, 11, 88, 86, 91, 146, 145, 80, 80, 86, 91, 97, 11, 139, 129, 97, 10, 214, 86, 91, 130, 82, 80, 80, 86, 91, 96, 0, 96, 32, 130, 1, 144, 80, 97, 11, 166, 96, 0, 131, 1, 132, 97, 11, 130, 86, 91, 146, 145, 80, 80, 86, 91, 96, 0, 128, 96, 0, 96, 96, 132, 134, 3, 18, 21, 97, 11, 197, 87, 97, 11, 196, 97, 10, 115, 86, 91, 91, 96, 0, 97, 11, 211, 134, 130, 135, 1, 97, 10, 193, 86, 91, 147, 80, 80, 96, 32, 97, 11, 228, 134, 130, 135, 1, 97, 10, 193, 86, 91, 146, 80, 80, 96, 64, 97, 11, 245, 134, 130, 135, 1, 97, 10, 247, 86, 91, 145, 80, 80, 146, 80, 146, 80, 146, 86, 91, 96, 0, 96, 255, 130, 22, 144, 80, 145, 144, 80, 86, 91, 97, 12, 21, 129, 97, 11, 255, 86, 91, 130, 82, 80, 80, 86, 91, 96, 0, 96, 32, 130, 1, 144, 80, 97, 12, 48, 96, 0, 131, 1, 132, 97, 12, 12, 86, 91, 146, 145, 80, 80, 86, 91, 96, 0, 96, 32, 130, 132, 3, 18, 21, 97, 12, 76, 87, 97, 12, 75, 97, 10, 115, 86, 91, 91, 96, 0, 97, 12, 90, 132, 130, 133, 1, 97, 10, 193, 86, 91, 145, 80, 80, 146, 145, 80, 80, 86, 91, 96, 0, 128, 96, 64, 131, 133, 3, 18, 21, 97, 12, 122, 87, 97, 12, 121, 97, 10, 115, 86, 91, 91, 96, 0, 97, 12, 136, 133, 130, 134, 1, 97, 10, 193, 86, 91, 146, 80, 80, 96, 32, 97, 12, 153, 133, 130, 134, 1, 97, 10, 193, 86, 91, 145, 80, 80, 146, 80, 146, 144, 80, 86, 91, 127, 78, 72, 123, 113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 0, 82, 96, 34, 96, 4, 82, 96, 36, 96, 0, 253, 91, 96, 0, 96, 2, 130, 4, 144, 80, 96, 1, 130, 22, 128, 97, 12, 234, 87, 96, 127, 130, 22, 145, 80, 91, 96, 32, 130, 16, 129, 3, 97, 12, 253, 87, 97, 12, 252, 97, 12, 163, 86, 91, 91, 80, 145, 144, 80, 86, 91, 127, 78, 72, 123, 113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 0, 82, 96, 17, 96, 4, 82, 96, 36, 96, 0, 253, 91, 96, 0, 97, 13, 61, 130, 97, 10, 214, 86, 91, 145, 80, 97, 13, 72, 131, 97, 10, 214, 86, 91, 146, 80, 130, 130, 3, 144, 80, 129, 129, 17, 21, 97, 13, 96, 87, 97, 13, 95, 97, 13, 3, 86, 91, 91, 146, 145, 80, 80, 86, 91, 96, 0, 97, 13, 113, 130, 97, 10, 214, 86, 91, 145, 80, 97, 13, 124, 131, 97, 10, 214, 86, 91, 146, 80, 130, 130, 1, 144, 80, 128, 130, 17, 21, 97, 13, 148, 87, 97, 13, 147, 97, 13, 3, 86, 91, 91, 146, 145, 80, 80, 86, 254, 162, 100, 105, 112, 102, 115, 88, 34, 18, 32, 123, 212, 246, 82, 255, 106, 134, 236, 239, 211, 127, 246, 214, 163, 193, 92, 89, 50, 221, 231, 250, 73, 120, 86, 66, 135, 124, 198, 205, 86, 74, 157, 100, 115, 111, 108, 99, 67, 0, 8, 17, 0, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 160, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 75, 97, 107, 97, 114, 111, 116, 32, 84, 111, 107, 101, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 75, 75, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}"
SolmateERC20,kakarot,execute_at_address,703193,87304,20493.0,18860.0,3549.0,(),"{'address': 981189583472599312072821401113022120965356606301, 'value': 0, 'calldata': [35, 184, 114, 221, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10]}"
SolmateERC20,kakarot,execute_at_address,499813,61814,15733.0,6290.0,3545.0,(),"{'address': 981189583472599312072821401113022120965356606301, 'value': 0, 'calldata': [169, 5, 156, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5]}"
SolmateERC20,kakarot,execute_at_address,468831,58824,15081.0,6290.0,3539.0,(),"{'address': 981189583472599312072821401113022120965356606301, 'value': 0, 'calldata': [9, 94, 167, 179, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 66, 64]}"
SolmateERC20,kakarot,execute_at_address,442208,57166,14477.0,6280.0,3539.0,(),"{'address': 981189583472599312072821401113022120965356606301, 'value': 0, 'calldata': [221, 98, 237, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]}"
SolmateERC20,kakarot,execute_at_address,433620,53599,14084.0,3148.0,3545.0,(),"{'address': 981189583472599312072821401113022120965356606301, 'value': 0, 'calldata': [64, 193, 15, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 100]}"
SolmateERC20,kakarot,execute_at_address,378623,49121,13012.0,3140.0,3539.0,(),"{'address': 981189583472599312072821401113022120965356606301, 'value': 0, 'calldata': [112, 160, 130, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]}"
SolmateERC20,kakarot,execute_at_address,378623,49121,13012.0,3140.0,3539.0,(),"{'address': 981189583472599312072821401113022120965356606301, 'value': 0, 'calldata': [112, 160, 130, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]}"
SolmateERC20,kakarot,execute_at_address,378623,49121,13012.0,3140.0,3539.0,(),"{'address': 981189583472599312072821401113022120965356606301, 'value': 0, 'calldata': [112, 160, 130, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2]}"
SolmateERC20,kakarot,execute_at_address,378621,49122,13012.0,3140.0,3539.0,(),"{'address': 981189583472599312072821401113022120965356606301, 'value': 0, 'calldata': [112, 160, 130, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}"
SolmateERC20,kakarot,execute_at_address,378621,49122,13012.0,3140.0,3539.0,(),"{'address': 981189583472599312072821401113022120965356606301, 'value': 0, 'calldata': [112, 160, 130, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}"
SolmateERC20,kakarot,execute_at_address,378621,49122,13012.0,3140.0,3539.0,(),"{'address': 981189583472599312072821401113022120965356606301, 'value': 0, 'calldata': [112, 160, 130, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]}"
SolmateERC20,kakarot,execute_at_address,378621,49122,13012.0,3140.0,3539.0,(),"{'address': 981189583472599312072821401113022120965356606301, 'value': 0, 'calldata': [112, 160, 130, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3]}"
SolmateERC20,kakarot,execute_at_address,378621,49122,13012.0,3140.0,3539.0,(),"{'address': 981189583472599312072821401113022120965356606301, 'value': 0, 'calldata': [112, 160, 130, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]}"
SolmateERC20,kakarot,execute_at_address,378621,49122,13012.0,3140.0,3539.0,(),"{'address': 981189583472599312072821401113022120965356606301, 'value': 0, 'calldata': [112, 160, 130, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}"
SolmateERC20,kakarot,execute_at_address,378621,49122,13012.0,3140.0,3539.0,(),"{'address': 981189583472599312072821401113022120965356606301, 'value': 0, 'calldata': [112, 160, 130, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3]}"
SolmateERC20,kakarot,execute_at_address,378621,49122,13012.0,3140.0,3539.0,(),"{'address': 981189583472599312072821401113022120965356606301, 'value': 0, 'calldata': [112, 160, 130, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]}"
SolmateERC20,kakarot,execute_at_address,378621,49122,13012.0,3140.0,3539.0,(),"{'address': 981189583472599312072821401113022120965356606301, 'value': 0, 'calldata': [112, 160, 130, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3]}"
SolmateERC20,kakarot,execute_at_address,314879,41217,11534.0,0.0,3539.0,(),"{'address': 981189583472599312072821401113022120965356606301, 'value': 0, 'calldata': [24, 22, 13, 221]}"
IntegrationTestContract,kakarot,execute_at_address,53179,6219,1547.0,2.0,220.0,(),"{'address': 981189583472599312072821401113022120965356606301, 'value': 0, 'calldata': [36, 0, 112, 171]}"
IntegrationTestContract,kakarot,deploy,31964,3177,1263.0,0.0,221.0,(),"{'bytecode': [96, 128, 96, 64, 82, 52, 128, 21, 97, 0, 16, 87, 96, 0, 128, 253, 91, 80, 96, 219, 128, 97, 0, 31, 96, 0, 57, 96, 0, 243, 254, 96, 128, 96, 64, 82, 52, 128, 21, 96, 15, 87, 96, 0, 128, 253, 91, 80, 96, 4, 54, 16, 96, 40, 87, 96, 0, 53, 96, 224, 28, 128, 99, 36, 0, 112, 171, 20, 96, 45, 87, 91, 96, 0, 128, 253, 91, 96, 51, 96, 71, 86, 91, 96, 64, 81, 96, 62, 145, 144, 96, 140, 86, 91, 96, 64, 81, 128, 145, 3, 144, 243, 91, 96, 0, 48, 144, 80, 144, 86, 91, 96, 0, 115, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 130, 22, 144, 80, 145, 144, 80, 86, 91, 96, 0, 96, 120, 130, 96, 79, 86, 91, 144, 80, 145, 144, 80, 86, 91, 96, 134, 129, 96, 111, 86, 91, 130, 82, 80, 80, 86, 91, 96, 0, 96, 32, 130, 1, 144, 80, 96, 159, 96, 0, 131, 1, 132, 96, 127, 86, 91, 146, 145, 80, 80, 86, 254, 162, 100, 105, 112, 102, 115, 88, 34, 18, 32, 52, 226, 175, 25, 199, 93, 145, 156, 236, 229, 81, 103, 24, 0, 154, 65, 103, 164, 15, 248, 224, 27, 22, 253, 37, 142, 38, 190, 144, 79, 60, 253, 100, 115, 111, 108, 99, 67, 0, 8, 17, 0, 51]}"
Hash 32 bytes,kakarot,execute,26574,2672,601.0,3134.0,,(),"{'value': 0, 'bytecode': [97, 1, 0, 96, 0, 82, 96, 32, 96, 0, 32, 0], 'calldata': []}"
Hash 17 bytes,kakarot,execute,23997,1633,497.0,3132.0,0.0,(),"{'value': 0, 'bytecode': [96, 16, 96, 0, 82, 96, 17, 96, 0, 32, 0], 'calldata': []}"
Hash 9 bytes,kakarot,execute,22610,1079,441.0,3131.0,0.0,(),"{'value': 0, 'bytecode': [96, 16, 96, 0, 82, 96, 9, 96, 0, 32, 0], 'calldata': []}"
Hash 8 bytes,kakarot,execute,22447,1008,434.0,3131.0,0.0,(),"{'value': 0, 'bytecode': [96, 16, 96, 0, 82, 96, 8, 96, 0, 32, 0], 'calldata': []}"
Hash 7 bytes,kakarot,execute,22299,937,428.0,3130.0,,(),"{'value': 0, 'bytecode': [96, 16, 96, 0, 82, 96, 7, 96, 0, 32, 0], 'calldata': []}"
Hash 1 byte with offset 1f,kakarot,execute,21281,524,389.0,3130.0,,(),"{'value': 0, 'bytecode': [96, 16, 96, 0, 82, 96, 1, 96, 31, 32, 0], 'calldata': []}"
Hash 1 byte no offset,kakarot,execute,21266,524,386.0,3130.0,,(),"{'value': 0, 'bytecode': [96, 16, 96, 0, 82, 96, 1, 96, 0, 32, 0], 'calldata': []}"
Arithmetic operations,kakarot,execute,11872,1574,661.0,0.0,0.0,(),"{'value': 0, 'bytecode': [96, 3, 96, 4, 1, 96, 10, 2, 96, 140, 3, 97, 2, 188, 4, 96, 70, 5, 96, 13, 6, 96, 16, 7, 96, 5, 96, 6, 8, 96, 16, 96, 2, 9, 96, 4, 10, 96, 96, 11, 0], 'calldata': []}"
Environment Information - CODECOPY (0x39) - evmcode example 1+2,kakarot,execute,9067,906,193.0,,,(),"{'value': 0, 'bytecode': [125, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 80, 96, 50, 96, 0, 96, 0, 57, 96, 8, 96, 31, 96, 0, 57], 'calldata': []}"
Environment Information - CODECOPY (0x39) - evmcode example 1,kakarot,execute,7476,592,147.0,0.0,,(),"{'value': 0, 'bytecode': [125, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 80, 96, 50, 96, 0, 96, 0, 57], 'calldata': []}"
PRElog4,kakarot,execute,5876,736,135.0,0.0,0.0,(),"{'value': 0, 'bytecode': [96, 16, 96, 0, 82, 96, 8, 96, 171, 127, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 96, 255, 96, 1, 96, 31, 164, 0], 'calldata': []}"
PRElog3,kakarot,execute,5551,660,127.0,0.0,0.0,(),"{'value': 0, 'bytecode': [96, 16, 96, 0, 82, 96, 171, 127, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 96, 255, 96, 1, 96, 31, 163, 0], 'calldata': []}"
PRElog2,kakarot,execute,5226,584,119.0,0.0,0.0,(),"{'value': 0, 'bytecode': [96, 16, 96, 0, 82, 127, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 96, 255, 96, 1, 96, 31, 162, 0], 'calldata': []}"
"Environmental Information - CODECOPY (0x39) - code slice within bounds, memory offset < len < offset + size",kakarot,execute,5205,553,118.0,0.0,0.0,(),"{'value': 0, 'bytecode': [125, 0, 17, 34, 51, 68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 238, 255, 0, 17, 34, 51, 68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 96, 0, 82, 96, 32, 96, 3, 96, 1, 57], 'calldata': []}"
calldatacopy1,kakarot,execute,5144,557,117.0,0.0,,(),"{'value': 0, 'bytecode': [127, 0, 17, 34, 51, 68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 238, 255, 0, 17, 34, 51, 68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 238, 255, 96, 0, 82, 96, 16, 96, 3, 96, 3, 55], 'calldata': [17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17]}"
PRElog1,kakarot,execute,4901,508,111.0,0.0,0.0,(),"{'value': 0, 'bytecode': [96, 16, 96, 0, 82, 127, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 96, 1, 96, 31, 161, 0], 'calldata': []}"
Memory operations - Check saving memory in between an already saved memory location2,kakarot,execute,4881,459,146.0,0.0,,(),"{'value': 0, 'bytecode': [127, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 96, 0, 82, 97, 34, 34, 96, 5, 83, 0], 'calldata': []}"
"Environmental Information - CODECOPY (0x39) - code slice within bounds, memory copy within bounds",kakarot,execute,4861,558,113.0,0.0,0.0,(),"{'value': 0, 'bytecode': [125, 0, 17, 34, 51, 68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 238, 255, 0, 17, 34, 51, 68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 96, 0, 82, 96, 8, 96, 3, 96, 1, 57], 'calldata': []}"
"Environmental Information - CODECOPY (0x39) - code offset > len, memory offset + size < len",kakarot,execute,4841,552,113.0,0.0,0.0,(),"{'value': 0, 'bytecode': [125, 0, 17, 34, 51, 68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 238, 255, 0, 17, 34, 51, 68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 96, 0, 82, 96, 5, 96, 101, 96, 4, 57], 'calldata': []}"
Memory operations - Check saving memory in between an already saved memory location0,kakarot,execute,4581,433,110.0,0.0,0.0,(),"{'value': 0, 'bytecode': [127, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 96, 64, 82, 96, 17, 96, 53, 82, 0], 'calldata': []}"
Comparison & bitwise logic operations - SAR6,kakarot,execute,4196,346,146.0,4.0,0.0,(),"{'value': 0, 'bytecode': [127, 127, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 96, 255, 29], 'calldata': []}"
Comparison & bitwise logic operations - SAR9,kakarot,execute,4195,346,146.0,4.0,,(),"{'value': 0, 'bytecode': [127, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 255, 29], 'calldata': []}"
Comparison & bitwise logic operations - SAR3,kakarot,execute,4195,347,146.0,4.0,0.0,(),"{'value': 0, 'bytecode': [127, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 254, 29], 'calldata': []}"
Comparison & bitwise logic operations - SAR5,kakarot,execute,4195,347,146.0,4.0,0.0,(),"{'value': 0, 'bytecode': [127, 127, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 96, 254, 29], 'calldata': []}"
Comparison & bitwise logic operations - SAR14,kakarot,execute,4195,346,146.0,4.0,0.0,(),"{'value': 0, 'bytecode': [127, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 96, 255, 29], 'calldata': []}"
Comparison & bitwise logic operations - SAR4,kakarot,execute,4193,349,146.0,4.0,0.0,(),"{'value': 0, 'bytecode': [127, 127, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 96, 248, 29], 'calldata': []}"
codecopy2,kakarot,execute,4185,440,89.0,0.0,0.0,(),"{'value': 0, 'bytecode': [125, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 96, 8, 96, 31, 96, 0, 57], 'calldata': []}"
Comparison & bitwise logic operations - SAR13,kakarot,execute,4154,349,146.0,4.0,0.0,(),"{'value': 0, 'bytecode': [127, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 96, 1, 29], 'calldata': []}"
Comparison & bitwise logic operations - SHR0,kakarot,execute,4154,349,146.0,4.0,,(),"{'value': 0, 'bytecode': [127, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 1, 29], 'calldata': []}"
Comparison & bitwise logic operations - SAR12,kakarot,execute,4125,349,145.0,4.0,,(),"{'value': 0, 'bytecode': [127, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 96, 0, 29], 'calldata': []}"
PRElog4-1,kakarot,execute,4085,702,119.0,0.0,0.0,(),"{'value': 0, 'bytecode': [96, 16, 96, 0, 82, 96, 8, 96, 171, 96, 0, 96, 255, 96, 1, 96, 34, 164, 0], 'calldata': []}"
Comparison & bitwise logic operations - SAR7,kakarot,execute,3879,310,105.0,4.0,0.0,(),"{'value': 0, 'bytecode': [127, 127, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 97, 1, 0, 29], 'calldata': []}"
Comparison & bitwise logic operations - SAR10,kakarot,execute,3878,310,105.0,4.0,,(),"{'value': 0, 'bytecode': [127, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 1, 0, 29], 'calldata': []}"
Comparison & bitwise logic operations - SAR1,kakarot,execute,3878,310,105.0,4.0,0.0,(),"{'value': 0, 'bytecode': [127, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 97, 1, 0, 29], 'calldata': []}"
Comparison & bitwise logic operations - SAR11,kakarot,execute,3878,310,105.0,4.0,,(),"{'value': 0, 'bytecode': [127, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 1, 1, 29], 'calldata': []}"
PRElog3-1,kakarot,execute,3760,626,111.0,0.0,0.0,(),"{'value': 0, 'bytecode': [96, 16, 96, 0, 82, 96, 171, 96, 0, 96, 255, 96, 1, 96, 34, 163, 0], 'calldata': []}"
Comparison & bitwise logic operations - SHR6,kakarot,execute,3693,289,103.0,0.0,0.0,(),"{'value': 0, 'bytecode': [127, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 255, 28], 'calldata': []}"
Comparison & bitwise logic operations - SHR11,kakarot,execute,3693,289,103.0,0.0,0.0,(),"{'value': 0, 'bytecode': [127, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 96, 255, 28], 'calldata': []}"
Comparison & bitwise logic operations - SHR5,kakarot,execute,3652,292,103.0,0.0,0.0,(),"{'value': 0, 'bytecode': [127, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 1, 28], 'calldata': []}"
Comparison & bitwise logic operations - SHR10,kakarot,execute,3652,292,103.0,0.0,0.0,(),"{'value': 0, 'bytecode': [127, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 96, 1, 28], 'calldata': []}"
Comparison & bitwise logic operations - SHR9,kakarot,execute,3623,292,102.0,0.0,0.0,(),"{'value': 0, 'bytecode': [127, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 96, 0, 28], 'calldata': []}"
return,kakarot,execute,3610,382,136.0,0.0,0.0,(),"{'value': 0, 'bytecode': [96, 66, 96, 0, 82, 96, 32, 96, 0, 243], 'calldata': []}"
Comparison & bitwise logic operations - SHL9,kakarot,execute,3607,269,96.0,,,(),"{'value': 0, 'bytecode': [127, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 96, 255, 27], 'calldata': []}"
Comparison & bitwise logic operations - SHL10,kakarot,execute,3571,249,95.0,,,(),"{'value': 0, 'bytecode': [127, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 97, 1, 0, 27], 'calldata': []}"
Comparison & bitwise logic operations - SHL8,kakarot,execute,3566,272,96.0,,,(),"{'value': 0, 'bytecode': [127, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 96, 1, 27], 'calldata': []}"
Comparison & bitwise logic operations - SHL2,kakarot,execute,3566,272,96.0,0.0,0.0,(),"{'value': 0, 'bytecode': [127, 127, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 96, 1, 27], 'calldata': []}"
Comparison & bitwise logic operations - SHL7,kakarot,execute,3537,272,95.0,0.0,,(),"{'value': 0, 'bytecode': [127, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 96, 0, 27], 'calldata': []}"
PRElog2-1,kakarot,execute,3435,550,103.0,0.0,0.0,(),"{'value': 0, 'bytecode': [96, 16, 96, 0, 82, 96, 0, 96, 255, 96, 1, 96, 34, 162, 0], 'calldata': []}"
Comparison & bitwise logic operations - SHR7,kakarot,execute,3376,253,62.0,0.0,0.0,(),"{'value': 0, 'bytecode': [127, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 1, 0, 28], 'calldata': []}"
Comparison & bitwise logic operations - SHR8,kakarot,execute,3376,253,62.0,0.0,0.0,(),"{'value': 0, 'bytecode': [127, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 1, 1, 28], 'calldata': []}"
Comparison & bitwise logic operations - SHR2,kakarot,execute,3376,253,62.0,,,(),"{'value': 0, 'bytecode': [127, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 97, 1, 0, 28], 'calldata': []}"
Memory operations - Check saving memory with 30 bytes,kakarot,execute,3255,244,64.0,0.0,0.0,(),"{'value': 0, 'bytecode': [125, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 96, 0, 82], 'calldata': []}"
PRElog1-1,kakarot,execute,3110,474,95.0,0.0,0.0,(),"{'value': 0, 'bytecode': [96, 16, 96, 0, 82, 96, 255, 96, 1, 96, 34, 161, 0], 'calldata': []}"
calldatacopy4,kakarot,execute,2817,326,63.0,,,(),"{'value': 0, 'bytecode': [96, 64, 96, 3, 96, 0, 55], 'calldata': [0, 17, 34, 51, 68, 85, 102, 119, 136, 153, 170, 187, 204, 238, 221, 255, 0, 17, 34, 51, 68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 238, 255, 0, 17, 34, 51, 68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 238, 255]}"
Environmental Information - CODECOPY (0x39) - code with padding + memory offset > len ,kakarot,execute,2808,326,66.0,0.0,0.0,(),"{'value': 0, 'bytecode': [96, 56, 96, 2, 96, 3, 57], 'calldata': []}"
PRElog0-1,kakarot,execute,2785,398,87.0,0.0,0.0,(),"{'value': 0, 'bytecode': [96, 16, 96, 0, 82, 96, 1, 96, 34, 160, 0], 'calldata': []}"
PRElog0,kakarot,execute,2627,395,73.0,0.0,0.0,(),"{'value': 0, 'bytecode': [96, 16, 96, 0, 82, 96, 1, 96, 31, 160, 0], 'calldata': []}"
Exchange operations,kakarot,execute,2626,380,52.0,0.0,0.0,(),"{'value': 0, 'bytecode': [96, 3, 96, 2, 96, 1, 145, 96, 4, 146, 146, 0], 'calldata': []}"
Duplication operations,kakarot,execute,2618,441,63.0,0.0,0.0,(),"{'value': 0, 'bytecode': [96, 1, 128, 96, 3, 96, 4, 96, 2, 96, 5, 131, 0], 'calldata': []}"
calldatacopy,kakarot,execute,2470,323,63.0,0.0,,(),"{'value': 0, 'bytecode': [96, 32, 96, 5, 96, 6, 55, 0], 'calldata': [0, 17, 34, 51, 68, 85, 102, 119, 136, 153, 170, 187, 204, 238, 221, 255]}"
calldatacopy2,kakarot,execute,2469,326,60.0,,,(),"{'value': 0, 'bytecode': [96, 36, 96, 5, 96, 0, 55], 'calldata': [0, 17, 34, 51, 68, 85, 102, 119, 136, 153, 170, 187, 204, 238, 221, 255, 0, 17, 34, 51, 68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 238, 255]}"
Memory operations - Check Colliding offsets,kakarot,execute,2423,396,63.0,0.0,0.0,(),"{'value': 0, 'bytecode': [96, 17, 96, 64, 82, 96, 34, 96, 64, 82, 0], 'calldata': []}"
calldatacopy3,kakarot,execute,2384,329,57.0,,,(),"{'value': 0, 'bytecode': [96, 32, 96, 5, 96, 0, 55], 'calldata': [0, 17, 34, 51, 68, 85, 102, 119, 136, 153, 170, 187, 204, 238, 221, 255, 0, 17, 34, 51, 68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 238, 255, 0, 17, 34, 51, 68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 238, 255]}"
Comparison & bitwise logic operations - GT,kakarot,execute,2309,405,57.0,0.0,,(),"{'value': 0, 'bytecode': [96, 10, 96, 10, 17, 96, 9, 96, 10, 17], 'calldata': []}"
Comparison & bitwise logic operations - LT,kakarot,execute,2309,405,57.0,0.0,,(),"{'value': 0, 'bytecode': [96, 10, 96, 9, 16, 96, 10, 96, 10, 16], 'calldata': []}"
Comparison & bitwise logic operations - EQ,kakarot,execute,2291,368,55.0,0.0,0.0,(),"{'value': 0, 'bytecode': [96, 10, 96, 10, 20, 96, 9, 96, 10, 20], 'calldata': []}"
Comparison & bitwise logic operations - SAR2,kakarot,execute,2206,312,116.0,4.0,0.0,(),"{'value': 0, 'bytecode': [96, 0, 96, 1, 29], 'calldata': []}"
Comparison & bitwise logic operations - SAR8,kakarot,execute,2206,312,116.0,4.0,0.0,(),"{'value': 0, 'bytecode': [96, 1, 96, 1, 29], 'calldata': []}"
Load Word from Memory2,kakarot,execute,2196,322,59.0,0.0,0.0,(),"{'value': 0, 'bytecode': [96, 10, 96, 0, 82, 96, 0, 81], 'calldata': []}"
Comparison & bitwise logic operations - SAR0,kakarot,execute,2177,312,115.0,4.0,0.0,(),"{'value': 0, 'bytecode': [96, 1, 96, 0, 29], 'calldata': []}"
calldatacopy5,kakarot,execute,2107,331,53.0,0.0,0.0,(),"{'value': 0, 'bytecode': [96, 16, 96, 5, 96, 0, 55], 'calldata': [0, 17, 34, 51, 68, 85, 102, 119, 136, 153, 170, 187, 204, 238, 221, 255, 0, 17, 34, 51, 68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 238, 255]}"
codecopy,kakarot,execute,1991,328,53.0,0.0,0.0,(),"{'value': 0, 'bytecode': [96, 5, 96, 3, 96, 0, 57], 'calldata': []}"
Jumpdest opcode,kakarot,execute,1967,305,46.0,0.0,0.0,(),"{'value': 0, 'bytecode': [88, 96, 1, 91, 96, 1, 96, 1, 88], 'calldata': []}"
"Environment Information - CODECOPY (0x39) - code slice within bounds, memory offset > len with tail padding",kakarot,execute,1953,331,53.0,0.0,0.0,(),"{'value': 0, 'bytecode': [96, 2, 96, 0, 96, 0, 57], 'calldata': []}"
Memory operations - Check saving memory in between an already saved memory location1,kakarot,execute,1909,234,87.0,0.0,0.0,(),"{'value': 0, 'bytecode': [97, 17, 34, 96, 3, 83], 'calldata': []}"
Comparison & bitwise logic operations - SHR4,kakarot,execute,1703,255,73.0,0.0,0.0,(),"{'value': 0, 'bytecode': [96, 1, 96, 1, 28], 'calldata': []}"
Comparison & bitwise logic operations - SHR3,kakarot,execute,1703,255,73.0,0.0,0.0,(),"{'value': 0, 'bytecode': [96, 0, 96, 1, 28], 'calldata': []}"
Comparison & bitwise logic operations - SHR1,kakarot,execute,1674,255,72.0,,,(),"{'value': 0, 'bytecode': [96, 1, 96, 0, 28], 'calldata': []}"
Comparison & bitwise logic operations - SHL4,kakarot,execute,1658,232,66.0,0.0,,(),"{'value': 0, 'bytecode': [96, 1, 96, 255, 27], 'calldata': []}"
Comparison & bitwise logic operations - SHL5,kakarot,execute,1622,212,65.0,0.0,,(),"{'value': 0, 'bytecode': [96, 1, 97, 1, 0, 27], 'calldata': []}"
Comparison & bitwise logic operations - SHL6,kakarot,execute,1622,212,65.0,0.0,,(),"{'value': 0, 'bytecode': [96, 1, 97, 1, 1, 27], 'calldata': []}"
Comparison & bitwise logic operations - SHL1,kakarot,execute,1617,235,66.0,0.0,0.0,(),"{'value': 0, 'bytecode': [96, 0, 96, 1, 27], 'calldata': []}"
Comparison & bitwise logic operations - SHL3,kakarot,execute,1617,235,66.0,0.0,,(),"{'value': 0, 'bytecode': [96, 1, 96, 1, 27], 'calldata': []}"
Comparison & bitwise logic operations - SHL0,kakarot,execute,1588,235,65.0,0.0,0.0,(),"{'value': 0, 'bytecode': [96, 1, 96, 0, 27], 'calldata': []}"
return2,kakarot,execute,1583,195,47.0,0.0,0.0,(),"{'value': 0, 'bytecode': [96, 1, 96, 1, 243], 'calldata': []}"
Memory operations0,kakarot,execute,1451,205,36.0,,,(),"{'value': 0, 'bytecode': [96, 10, 96, 0, 82, 0], 'calldata': []}"
Memory operations - Check very large offsets,kakarot,execute,1451,205,36.0,0.0,0.0,(),"{'value': 0, 'bytecode': [96, 17, 96, 64, 82, 0], 'calldata': []}"
Comparison & bitwise logic operations - SGT,kakarot,execute,1403,212,35.0,0.0,,(),"{'value': 0, 'bytecode': [96, 255, 96, 1, 19], 'calldata': []}"
Comparison & bitwise logic operations - SLT,kakarot,execute,1400,215,35.0,0.0,0.0,(),"{'value': 0, 'bytecode': [96, 255, 96, 1, 18], 'calldata': []}"
Comparison & bitwise logic operations - OR,kakarot,execute,1345,195,30.0,2.0,,(),"{'value': 0, 'bytecode': [96, 5, 96, 3, 23], 'calldata': []}"
Comparison & bitwise logic operations - AND,kakarot,execute,1345,195,30.0,2.0,0.0,(),"{'value': 0, 'bytecode': [96, 5, 96, 5, 22], 'calldata': []}"
Environmental information,kakarot,execute,1344,190,30.0,0.0,0.0,(),"{'value': 0, 'bytecode': [96, 1, 97, 1, 2, 56, 0], 'calldata': []}"
Balance,kakarot,execute,1322,136,28.0,0.0,2.0,(),"{'value': 0, 'bytecode': [96, 1, 49, 0], 'calldata': []}"
Load CallData onto the Stack - 0x35 CALLDATALOAD,kakarot,execute,1322,161,24.0,0.0,0.0,(),"{'value': 0, 'bytecode': [96, 0, 53], 'calldata': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10]}"
Block information CHAINID,kakarot,execute,1291,190,29.0,0.0,0.0,(),"{'value': 0, 'bytecode': [96, 1, 96, 2, 70, 0], 'calldata': []}"
Memory operation - PC,kakarot,execute,1188,136,29.0,,,(),"{'value': 0, 'bytecode': [88, 96, 1, 88], 'calldata': []}"
Comparison & bitwise logic operations - ISZERO,kakarot,execute,1012,119,22.0,0.0,,(),"{'value': 0, 'bytecode': [96, 0, 21], 'calldata': []}"
Comparison & bitwise logic operations - NOT,kakarot,execute,1006,119,22.0,0.0,,(),"{'value': 0, 'bytecode': [96, 0, 25], 'calldata': []}"
Load Word from Memory0,kakarot,execute,956,114,21.0,,,(),"{'value': 0, 'bytecode': [96, 10, 68, 0], 'calldata': []}"
,contract_account,bytecode,884,105,31.0,0.0,10.0,(),{}
contract_account,contract_account,write_bytecode,805,105,31.0,0.0,10.0,"([204, 0, 252, 170, 124, 166, 32, 97, 113, 122],)",{}
Origin Address,kakarot,execute,784,49,16.0,0.0,1.0,(),"{'value': 0, 'bytecode': [50, 0], 'calldata': []}"
Get balance of currently executing contract - 0x47 SELFBALANCE,kakarot,execute,754,48,13.0,0.0,1.0,(),"{'value': 0, 'bytecode': [71, 0], 'calldata': []}"
Caller Address,kakarot,execute,630,38,13.0,0.0,,(),"{'value': 0, 'bytecode': [51, 0], 'calldata': []}"
Block information TIMESTAMP,kakarot,execute,630,38,13.0,0.0,0.0,(),"{'value': 0, 'bytecode': [66, 0], 'calldata': []}"
Block information NUMBER,kakarot,execute,630,38,13.0,0.0,0.0,(),"{'value': 0, 'bytecode': [67, 0], 'calldata': []}"
Get Memory Size,kakarot,execute,623,38,13.0,,,(),"{'value': 0, 'bytecode': [89, 0], 'calldata': []}"
Get the size of calldata when non empty calldata - 0x36 CALLDATASIZE,kakarot,execute,622,38,13.0,0.0,0.0,(),"{'value': 0, 'bytecode': [54, 0], 'calldata': [255]}"
Get the size of calldata when empty calldata - 0x36 CALLDATASIZE,kakarot,execute,622,38,13.0,0.0,0.0,(),"{'value': 0, 'bytecode': [54, 0], 'calldata': []}"
Get address of currently executing account - 0x30 ADDRESS,kakarot,execute,622,38,13.0,0.0,,(),"{'value': 0, 'bytecode': [48, 0], 'calldata': []}"
Get the size of return data - 0x3d RETURNDATASIZE,kakarot,execute,621,38,13.0,,,(),"{'value': 0, 'bytecode': [61, 0], 'calldata': []}"
Gas Limit,kakarot,execute,621,38,13.0,0.0,0.0,(),"{'value': 0, 'bytecode': [69, 0], 'calldata': []}"
Block information COINBASE,kakarot,execute,621,38,13.0,0.0,0.0,(),"{'value': 0, 'bytecode': [65, 0], 'calldata': []}"
Get deposited value by the instruction/transaction responsible for this execution - 0x34 CALLVALUE,kakarot,execute,616,41,13.0,,,(),"{'value': 9000000000, 'bytecode': [52], 'calldata': []}"
,account_registry,transfer_ownership,223,0,0.0,0.0,,"(1,)",{}
System operations INVALID,account_registry,transfer_ownership,223,0,0.0,0.0,0.0,"(1,)",{}
,account_registry,transfer_ownership,223,0,0.0,0.0,0.0,"(2260441089987887305987205018813591192920391820111808703675771128556806628776,)",{}
,account_registry,transfer_ownership,223,0,0.0,0.0,0.0,"(2260441089987887305987205018813591192920391820111808703675771128556806628776,)",{}
,account_registry,transfer_ownership,223,0,0.0,0.0,0.0,"(1,)",{}
,account_registry,transfer_ownership,223,0,0.0,0.0,0.0,"(2260441089987887305987205018813591192920391820111808703675771128556806628776,)",{}
,account_registry,transfer_ownership,223,0,0.0,0.0,,"(2260441089987887305987205018813591192920391820111808703675771128556806628776,)",{}
,account_registry,transfer_ownership,223,0,0.0,0.0,0.0,"(2260441089987887305987205018813591192920391820111808703675771128556806628776,)",{}
,account_registry,transfer_ownership,223,0,0.0,0.0,,"(1,)",{}
,account_registry,transfer_ownership,223,0,0.0,0.0,,"(2260441089987887305987205018813591192920391820111808703675771128556806628776,)",{}
,account_registry,transfer_ownership,223,0,0.0,0.0,0.0,"(1,)",{}
,account_registry,transfer_ownership,223,0,0.0,0.0,0.0,"(2260441089987887305987205018813591192920391820111808703675771128556806628776,)",{}
ERC721,account_registry,transfer_ownership,223,0,0.0,,,"(1,)",{}
,account_registry,transfer_ownership,223,0,0.0,,,"(2260441089987887305987205018813591192920391820111808703675771128556806628776,)",{}
,account_registry,transfer_ownership,223,0,0.0,0.0,0.0,"(1,)",{}
,account_registry,transfer_ownership,223,0,0.0,0.0,0.0,"(1,)",{}
,account_registry,set_account_entry,190,21,6.0,0.0,2.0,"(7735, 9171)",{}
,account_registry,get_evm_contract_address,98,10,3.0,0.0,1.0,"(7735,)",{}
,account_registry,get_starknet_contract_address,96,11,3.0,0.0,1.0,"(9171,)",{}
,kakarot,set_account_registry,93,0,0.0,0.0,0.0,(),{'registry_address_': 2886833052963579273547603311562511163286573173333730118165592388204472041034}
,kakarot,set_account_registry,93,0,0.0,0.0,,(),{'registry_address_': 2886833052963579273547603311562511163286573173333730118165592388204472041034}
,kakarot,set_account_registry,93,0,0.0,,,(),{'registry_address_': 2886833052963579273547603311562511163286573173333730118165592388204472041034}
,kakarot,set_account_registry,93,0,0.0,0.0,0.0,(),{'registry_address_': 2886833052963579273547603311562511163286573173333730118165592388204472041034}
,kakarot,set_account_registry,93,0,0.0,0.0,0.0,(),{'registry_address_': 2886833052963579273547603311562511163286573173333730118165592388204472041034}
,kakarot,set_account_registry,93,0,0.0,0.0,0.0,(),{'registry_address_': 2886833052963579273547603311562511163286573173333730118165592388204472041034}
,kakarot,set_account_registry,93,0,0.0,0.0,,(),{'registry_address_': 2886833052963579273547603311562511163286573173333730118165592388204472041034}
,kakarot,set_account_registry,93,0,0.0,0.0,0.0,(),{'registry_address_': 2886833052963579273547603311562511163286573173333730118165592388204472041034}
